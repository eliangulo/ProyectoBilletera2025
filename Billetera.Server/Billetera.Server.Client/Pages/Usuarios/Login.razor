@page "/login"
@using global::Billetera.Shared.DTOS
@using global::Billetera.Servicio.ServiciosHttp
@inject IAuthService authService
@inject NavigationManager Navigation

<h3>Iniciar Sesi칩n</h3>

@if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="alert alert-danger">@mensajeError</div>
}

<EditForm Model="usuario" OnValidSubmit="Grabar">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>CUIL</label>
        <InputNumber class="form-control" @bind-Value="usuario.CUIL" />
    </div>

    <div class="form-group">
        <label>Correo</label>
        <InputText class="form-control" @bind-Value="usuario.Correo" />
    </div>

    <div class="form-group">
        <label>Contrase침a</label>
        <div class="input-group">
            <InputText type="@tipoInputPassword" class="form-control" @bind-Value="usuario.Password" />
            <button class="btn btn-outline-secondary" type="button" @onclick="TogglePasswordVisibility">游녜</button>
        </div>
    </div>

    <br />
    <button type="submit" class="btn btn-primary">Iniciar Sesi칩n</button>
    <button class="btn btn-secondary" type="button" @onclick="Cancelar">Volver Atr치s</button>
</EditForm>

@code {
    private UsuariosDTO.Login usuario = new();
    private string? mensajeError;
    private bool mostrarPassword = false;
    private string tipoInputPassword => mostrarPassword ? "text" : "password";

    private void TogglePasswordVisibility() => mostrarPassword = !mostrarPassword;

    private async Task Grabar()
    {
        try
        {
            mensajeError = null;
            await authService.Login(usuario);
            Navigation.NavigateTo("/billetera", forceLoad: true);
        }
        catch (Exception ex)
        {
            mensajeError = $"Error: {ex.Message}";
        }
    }

    private void Cancelar() => Navigation.NavigateTo("/");
}