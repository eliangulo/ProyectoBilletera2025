@page "/billetera"
@using global::Billetera.Shared.DTOS
@using global::Billetera.Servicio.ServiciosHttp
@inject IHttpServicio httpServicio
@inject IHttpServicio http
@inject IAuthService authService
@inject NavigationManager Navigation

<PageTitle>Mi Billetera</PageTitle>

@if (!estaAutenticado)
{
    <p>Redirigiendo al login...</p>
}
else if (cargando)
{
    <div class="loading-container">
        <div class="spinner"></div>
        <p>Cargando tu billetera...</p>
    </div>
}
else if (billetera != null)
{
    <div class="billetera-container">
        <!-- Header con nombre del usuario -->
        <div class="header-section">
            <div>
                <h2>¡Hola, @usuarioActual?.Nombre!</h2>
                <p class="text-muted">Bienvenido a tu billetera digital</p>
            </div>
            <button class="btn btn-outline-danger" @onclick="CerrarSesion">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M10 12.5a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-9a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v2a.5.5 0 0 0 1 0v-2A1.5 1.5 0 0 0 9.5 2h-8A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-2a.5.5 0 0 0-1 0v2z"/>
                    <path fill-rule="evenodd" d="M15.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L14.293 7.5H5.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z"/>
                </svg>
                Cerrar Sesión
            </button>
        </div>

        <!-- Información de la billetera -->
        <div class="billetera-card">
            <div class="card-header">
                <h3>Mi Billetera</h3>
                <span class="badge">ID: @billetera.Id</span>
            </div>
            <div class="card-body">
                <p class="fecha-creacion">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z"/>
                        <path d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5zM1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4H1z"/>
                    </svg>
                    Creada el: @billetera.FechaCreacion.ToString("dd/MM/yyyy")
                </p>
            </div>
        </div>

        <!-- Sección de Cuentas -->
        <div class="cuentas-section">
            <h3>Mis Cuentas</h3>
            
            @if (billetera.Cuentas == null || !billetera.Cuentas.Any())
            {
                <div class="no-cuentas-card">
                    <div class="icon-placeholder">
                        <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M1 3a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1H1zm7 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/>
                            <path d="M0 5a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V5zm3 0a2 2 0 0 1-2 2v4a2 2 0 0 1 2 2h10a2 2 0 0 1 2-2V7a2 2 0 0 1-2-2H3z"/>
                        </svg>
                    </div>
                    <h4>Aún no tienes cuentas</h4>
                    <p class="info-text">Pronto podrás agregar cuentas de ahorro, inversión y más.</p>
                </div>
            }
            else
            {
                <div class="cuentas-grid">
                    @foreach (var cuenta in billetera.Cuentas)
                    {
                        <div class="cuenta-card">
                            <div class="cuenta-header">
                                <h4>Cuenta #@cuenta.NumCuenta</h4>
                                <span class="tipo-badge">Tipo: @cuenta.TipoCuentaId</span>
                            </div>
                            <div class="cuenta-saldo">
                                <p class="label">Saldo disponible</p>
                                <p class="monto">@cuenta.Saldo.ToString("C")</p>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>

        <!-- Acciones rápidas (deshabilitadas por ahora) -->
        <div class="acciones-section">
            <h3>Acciones Rápidas</h3>
            <div class="acciones-grid">
                <button class="accion-btn" disabled>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4a1 1 0 0 0-1-1H2z"/>
                        <path d="M8 10a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"/>
                    </svg>
                    <span>Transferir</span>
                </button>
                <button class="accion-btn" disabled>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
                        <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319z"/>
                    </svg>
                    <span>Recargar</span>
                </button>
                <button class="accion-btn" disabled>
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/>
                        <path d="M4 2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm-9 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3 0a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1z"/>
                    </svg>
                    <span>Historial</span>
                </button>
            </div>
            <p class="acciones-info">Funcionalidades disponibles próximamente</p>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(mensajeError))
{
    <div class="error-container">
        <div class="alert alert-danger">
            <h4>Error al cargar la billetera</h4>
            <p>@mensajeError</p>
            <button class="btn btn-primary" @onclick="CargarDatos">Reintentar</button>
        </div>
    </div>
}
@code{ private BilleteraConCuentasDTO? billetera;
   private UsuariosDTO? usuarioActual;
    private bool cargando = true;
    private bool estaAutenticado = false;
    private string? mensajeError;

    protected override async Task OnInitializedAsync()
    {
        // Verificar autenticación
        estaAutenticado = await authService.EstaAutenticado();
        
        if (!estaAutenticado)
        {
            Navigation.NavigateTo("/login");
            return;
        }

        usuarioActual = await authService.GetUsuarioActual();
        await CargarDatos();
    }

    private async Task CargarDatos()
    {
        try
        {
            cargando = true;
            mensajeError = null;

            if (usuarioActual == null)
            {
                Navigation.NavigateTo("/login");
                return;
            }

            var respuesta = await http.Get<BilleteraConCuentasDTO>($"api/billeteras/usuario/{usuarioActual.Id}");

            if (!respuesta.Error && respuesta.Respuesta != null)
            {
                billetera = respuesta.Respuesta;
            }
            else
            {
                mensajeError = "No se pudo cargar la información de tu billetera.";
            }
        }
        catch (Exception ex)
        {
            mensajeError = $"Error: {ex.Message}";
        }
        finally
        {
            cargando = false;
        }
    }

    private async Task CerrarSesion()
    {
        await authService.Logout();
        Navigation.NavigateTo("/");
    }
}