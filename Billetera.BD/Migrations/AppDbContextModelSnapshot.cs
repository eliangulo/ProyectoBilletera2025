// <auto-generated />
using System;
using Billetera.BD.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Billetera.BD.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Billetera.BD.Datos.Entity.Billeteras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Billera_Admin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Billetera");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BilleteraId")
                        .HasColumnType("int");

                    b.Property<string>("NumCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TipoCuentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoCuentaId");

                    b.HasIndex(new[] { "BilleteraId", "TipoCuentaId" }, "Cuenta_Billetera_Tipo_UQ")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodISO")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<string>("TipoMoneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CodISO" }, "Moneda_CodISO_UQ")
                        .IsUnique();

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.TipoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<string>("Moneda_Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TC_Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("MonedaId");

                    b.ToTable("TiposCuentas");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BilleteraId")
                        .HasColumnType("int");

                    b.Property<long>("CUIL")
                        .HasColumnType("bigint");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BilleteraId");

                    b.HasIndex(new[] { "CUIL" }, "Usuarios_CUIL_UQ")
                        .IsUnique();

                    b.HasIndex(new[] { "Correo" }, "Usuarios_Correo_UQ")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.Cuenta", b =>
                {
                    b.HasOne("Billetera.BD.Datos.Entity.Billeteras", "Billetera")
                        .WithMany()
                        .HasForeignKey("BilleteraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Billetera.BD.Datos.Entity.TipoCuenta", "TiposCuentas")
                        .WithMany()
                        .HasForeignKey("TipoCuentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Billetera");

                    b.Navigation("TiposCuentas");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.TipoCuenta", b =>
                {
                    b.HasOne("Billetera.BD.Datos.Entity.Moneda", "Moneda")
                        .WithMany()
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Moneda");
                });

            modelBuilder.Entity("Billetera.BD.Datos.Entity.Usuarios", b =>
                {
                    b.HasOne("Billetera.BD.Datos.Entity.Billeteras", "Billetera")
                        .WithMany()
                        .HasForeignKey("BilleteraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Billetera");
                });
#pragma warning restore 612, 618
        }
    }
}
